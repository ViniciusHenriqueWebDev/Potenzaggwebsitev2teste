// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PotenzaggSite.Data;

namespace PotenzaggSite.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211020211523_20.10.2021")]
    partial class _20102021
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PotenzaggSite.Models.Comunidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComunidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComunidadeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comunidade");
                });

            modelBuilder.Entity("PotenzaggSite.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Campanha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Curso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entrada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nick")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OndeConheceu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OptInEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("OptInZap")
                        .HasColumnType("bit");

                    b.Property<string>("OrientacaoSexual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlTAG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PotenzaggSite.Models.Comunidade", b =>
                {
                    b.HasOne("PotenzaggSite.Models.Comunidade", null)
                        .WithMany("Comunidades")
                        .HasForeignKey("ComunidadeId");

                    b.HasOne("PotenzaggSite.Models.Usuario", null)
                        .WithMany("Comunidades")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("PotenzaggSite.Models.Comunidade", b =>
                {
                    b.Navigation("Comunidades");
                });

            modelBuilder.Entity("PotenzaggSite.Models.Usuario", b =>
                {
                    b.Navigation("Comunidades");
                });
#pragma warning restore 612, 618
        }
    }
}
