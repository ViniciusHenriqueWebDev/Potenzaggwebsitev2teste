// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PotenzaggSite.Data;

namespace PotenzaggSite.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210921162420_MigracaoPotenzaGG")]
    partial class MigracaoPotenzaGG
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PotenzaggSite.Models.Comunidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComunidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComunidadeId");

                    b.ToTable("Comunidades");
                });

            modelBuilder.Entity("PotenzaggSite.Models.Interesse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InteresseId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InteresseId");

                    b.ToTable("Interesses");
                });

            modelBuilder.Entity("PotenzaggSite.Models.RedeSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RedeSocialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RedeSocialId");

                    b.ToTable("RedeSocials");
                });

            modelBuilder.Entity("PotenzaggSite.Models.SexoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Orientacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SexoUsuarios");
                });

            modelBuilder.Entity("PotenzaggSite.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Campanha")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Entrada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OndeConheceu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("OptInEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("OptInZap")
                        .HasColumnType("bit");

                    b.Property<string>("OrientacaoSexual")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UrlTAG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PotenzaggSite.Models.Comunidade", b =>
                {
                    b.HasOne("PotenzaggSite.Models.Comunidade", null)
                        .WithMany("Comunidades")
                        .HasForeignKey("ComunidadeId");
                });

            modelBuilder.Entity("PotenzaggSite.Models.Interesse", b =>
                {
                    b.HasOne("PotenzaggSite.Models.Interesse", null)
                        .WithMany("Interesses")
                        .HasForeignKey("InteresseId");
                });

            modelBuilder.Entity("PotenzaggSite.Models.RedeSocial", b =>
                {
                    b.HasOne("PotenzaggSite.Models.RedeSocial", null)
                        .WithMany("RedesSociais")
                        .HasForeignKey("RedeSocialId");
                });

            modelBuilder.Entity("PotenzaggSite.Models.Comunidade", b =>
                {
                    b.Navigation("Comunidades");
                });

            modelBuilder.Entity("PotenzaggSite.Models.Interesse", b =>
                {
                    b.Navigation("Interesses");
                });

            modelBuilder.Entity("PotenzaggSite.Models.RedeSocial", b =>
                {
                    b.Navigation("RedesSociais");
                });
#pragma warning restore 612, 618
        }
    }
}
